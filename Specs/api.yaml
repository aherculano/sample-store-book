openapi: 3.0.0
info:
  title: Book Store API
  description: A simple API to catalog the books of a book store
  version: '1.0'
paths:
  /books:
    get:
      summary: Lists all books in the store
      tags:
        - book
      responses:
        200:
          description: Retrieves the list of books in the store with success
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Book'
    post:
      summary: Registers a book in the store
      tags:
        - book
      responses:
        201:
          description: The book was created with success
          headers:
            Location:
              description: Where the book is located
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Book'

  /books/{bookId}:
    parameters:
      - name: bookId
        in: path
        description: Unique Identifier of the book
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Gets a specific book
      tags:
        - book
      responses:
        200:
          description: Retrieves the book of the specified ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        404:
          description: Book was not found
    put:
      summary: Updates a book
      tags:
        - book
      responses:
        200:
          description: The book was updated with success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        404:
          description: The book was not found
    delete:
      summary: Deletes the book
      tags:
        - book
      responses:
        204:
          description: The book was deleted with success
        404:
          description: The book was not found

  /books/{bookId}/reviews:
    parameters:
      - name: bookId
        in: path
        description: Unique Identifier of the book
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Gets the list of reviews for a specific book
      tags:
        - reviews
      responses:
        200:
          description: Retrieves the list of reviews for a book with success
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Review'
        404:
          description: Not Found
    post:
      summary: Creates a Book review
      tags:
        - reviews
      responses:
        201:
          description: The review was created with success
          headers:
            Location:
              description: Where the review is located
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Review'
  
  /books/{bookId}/reviews/{reviewId}:
    parameters:
      - name: bookId
        in: path
        description: Unique Identifier of the book
        required: true
        schema:
          type: string
          format: uuid
      - name: reviewId
        in: path
        description: Unique Identifier of the review
        required: true
        schema:
          type: string
          format: uuid
    delete:
      summary: Deletes a book review
      tags:
        - reviews
      responses:
        204:
          description: The review was deleted with success
        404:
          description: The review was not found



components:
  schemas:
    Book:
      $ref: 'Components/book.yaml#/components/schemas/Book'
    Review:
      $ref: 'Components/book.review.yaml#/components/schemas/Review'